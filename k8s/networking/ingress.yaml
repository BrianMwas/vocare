# Ingress configuration for Vocare Restaurant Assistant
# This provides HTTP/HTTPS access to the services

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vocare-ingress
  namespace: vocare-restaurant
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
    appgw.ingress.kubernetes.io/request-timeout: "30"
    # Enable WebSocket support for LiveKit
    appgw.ingress.kubernetes.io/backend-protocol: "http"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  tls:
  - hosts:
    - vocare.yourdomain.com
    - livekit.yourdomain.com
    secretName: vocare-tls-secret
  rules:
  - host: vocare.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 8000
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 8000
      - path: /webhook
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 8000
  - host: livekit.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: livekit-service
            port:
              number: 7880

---
# Alternative Ingress for NGINX Ingress Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vocare-ingress-nginx
  namespace: vocare-restaurant
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      Upgrade $http_upgrade
      Connection "upgrade"
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - vocare.yourdomain.com
    - livekit.yourdomain.com
    secretName: vocare-tls-secret
  rules:
  - host: vocare.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 8000
  - host: livekit.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: livekit-service
            port:
              number: 7880

---
# TLS Certificate (Let's Encrypt with cert-manager)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vocare-tls-cert
  namespace: vocare-restaurant
spec:
  secretName: vocare-tls-secret
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - vocare.yourdomain.com
  - livekit.yourdomain.com

---
# ClusterIssuer for Let's Encrypt (requires cert-manager)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: your-email@yourdomain.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx